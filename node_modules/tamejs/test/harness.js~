#!/usr/bin/env node
var tame = require('tamejs').runtime;
var __tame_fn_2 = function (__tame_k) {
    var fs = require ( 'fs' ) ;
    function Case (nm, file) {
        var self = this;
        this ._nm = nm ;
        this ._file = file ;
        
        this .run =
        function  (cb) {
            var self = this;
            var __tame_fn_15 = function (__tame_k) {
                var ret = true ;
                var x = require ( "../" + self ._file ) ;
                var __tame_fn_3 = function (__tame_k) {
                    var __tame_fn_4 = function (__tame_k) {
                        var __tame_for_in_array = [];
                        for (var c in x) { __tame_for_in_array.push(c); }
                        var __tame_for_in_iter = 0;
                        var __tame_fn_5 = function (__tame_k) {
                            var __tame_fn_6 = function (__tame_k) {
                                __tame_for_in_iter++
                                tame.callChain([__tame_fn_5, __tame_k]);
                            };
                            if (__tame_for_in_iter < __tame_for_in_array.length) {
                                var __tame_fn_13 = function (__tame_k) {
                                    var c = __tame_for_in_array[__tame_for_in_iter];
                                    var __tame_fn_7 = function (__tame_k) {
                                        var __tame_fn_8 = function (__tame_k) {
                                            var __tame_ev = new tame.Event (__tame_k);
                                            var __tame_fn_9 = function (__tame_k) {
                                                x [ c ] .run ( __tame_ev.mkevent ( ) ) ;
                                                tame.callChain([__tame_k]);
                                            };
                                            __tame_fn_9(tame.end);
                                            __tame_ev.trigger();
                                        };
                                        var __tame_fn_10 = function (__tame_k) {
                                                try {
                                                    var __tame_fn_11 = function (__tame_k) {
                                                        x [ c ] .check ( ) ;
                                                        console .log ( self ._nm + ": passed" ) ;
                                                        tame.callChain([__tame_k]);
                                                    };
                                                    tame.callChain([__tame_fn_11, __tame_k]);
                                                }
                                                catch (e) {
                                                    var __tame_fn_12 = function (__tame_k) {
                                                        console .log ( self ._nm + ": " + c + ": regtest failed: " + e ) ;
                                                        ret = false ;
                                                        tame.callChain([__tame_k]);
                                                    };
                                                    tame.callChain([__tame_fn_12, __tame_k]);
                                                }
                                        };
                                        tame.callChain([__tame_fn_8, __tame_fn_10, __tame_k]);
                                    };
                                    tame.callChain([__tame_fn_7, __tame_k]);
                                };
                                tame.callChain([__tame_fn_13, __tame_fn_6, __tame_k]);
                            } else {
                                tame.callChain([__tame_k]);
                            }
                            tame.__k_global.k_break = __tame_k;
                            tame.__k_global.k_continue = function() { __tame_fn_6(__tame_k); };
                        };
                        tame.callChain([__tame_fn_5, __tame_k]);
                    };
                    var __tame_fn_14 = function (__tame_k) {
                        cb ( ret ) ;
                        tame.callChain([__tame_k]);
                    };
                    tame.callChain([__tame_fn_4, __tame_fn_14, __tame_k]);
                };
                tame.callChain([__tame_fn_3, __tame_k]);
            };
            tame.callChain([__tame_fn_15, __tame_k]);
        }
        ;
        return this;
    }
    ;
    function TamedCase (prfx, infile, outfile) {
        var self = this;
        var that = new Case ( prfx + infile , prfx + outfile ) ;
        that ._infile = prfx + infile ;
        
        that .compile =
        function  (ev) {
            var self = this;
            var __tame_fn_26 = function (__tame_k) {
                var fs = require ( 'fs' ) ;
                var Engine = require ( '../lib/engine' ) .Engine ;
                var engine = new Engine ( self ._infile ) ;
                var __tame_fn_16 = function (__tame_k) {
                    var __tame_fn_17 = function (__tame_k) {
                        var __tame_ev = new tame.Event (__tame_k);
                        var __tame_fn_18 = function (__tame_k) {
                            engine .readInput ( __tame_ev.mkevent ( ) ) ;
                            tame.callChain([__tame_k]);
                        };
                        __tame_fn_18(tame.end);
                        __tame_ev.trigger();
                    };
                    var __tame_fn_25 = function (__tame_k) {
                        engine .parse ( ) ;
                        var outdat = engine .compile ( ) .formatOutput ( ) ;
                        var res = [ ] ;
                        var __tame_fn_19 = function (__tame_k) {
                            var __tame_fn_20 = function (__tame_k) {
                                var __tame_ev = new tame.Event (__tame_k);
                                var __tame_fn_21 = function (__tame_k) {
                                    fs .writeFile ( self ._file , outdat , __tame_ev.mkevent ( res ) ) ;
                                    tame.callChain([__tame_k]);
                                };
                                __tame_fn_21(tame.end);
                                __tame_ev.trigger();
                            };
                            var __tame_fn_22 = function (__tame_k) {
                                var __tame_fn_23 = function (__tame_k) {
                                    throw res [ 0 ] ;
                                    tame.callChain([__tame_k]);
                                };
                                if (res [ 0 ]) {
                                    tame.callChain([__tame_fn_23, __tame_k]);
                                } else {
                                    tame.callChain([__tame_k]);
                                }
                            };
                            var __tame_fn_24 = function (__tame_k) {
                                ev ( ) ;
                                tame.callChain([__tame_k]);
                            };
                            tame.callChain([__tame_fn_20, __tame_fn_22, __tame_fn_24, __tame_k]);
                        };
                        tame.callChain([__tame_fn_19, __tame_k]);
                    };
                    tame.callChain([__tame_fn_17, __tame_fn_25, __tame_k]);
                };
                tame.callChain([__tame_fn_16, __tame_k]);
            };
            tame.callChain([__tame_fn_26, __tame_k]);
        }
        ;
        return that;
    }
    ;
    function JsCase (file) {
        var self = this;
        var that = new Case ( file , file ) ;
        that .compile =
        function  (ev) {
            var self = this;
            ev ( ) ;
        }
        ;
        return that;
    }
    ;
    function read_cases (ev) {
        var self = this;
        var __tame_fn_46 = function (__tame_k) {
            var tests = [ ] ;
            var res = [ ] ;
            var prfx = "test/cases/" ;
            var __tame_fn_27 = function (__tame_k) {
                var __tame_fn_28 = function (__tame_k) {
                    var __tame_ev = new tame.Event (__tame_k);
                    var __tame_fn_29 = function (__tame_k) {
                        fs .readdir ( 'test/cases/' , __tame_ev.mkevent ( res ) ) ;
                        tame.callChain([__tame_k]);
                    };
                    __tame_fn_29(tame.end);
                    __tame_ev.trigger();
                };
                var __tame_fn_45 = function (__tame_k) {
                    var err = res [ 0 ] ;
                    var files = res [ 1 ] ;
                    var __tame_fn_30 = function (__tame_k) {
                        var __tame_fn_31 = function (__tame_k) {
                            var __tame_fn_32 = function (__tame_k) {
                                throw err ;
                                tame.callChain([__tame_k]);
                            };
                            if (err) {
                                tame.callChain([__tame_fn_32, __tame_k]);
                            } else {
                                tame.callChain([__tame_k]);
                            }
                        };
                        var __tame_fn_44 = function (__tame_k) {
                            var rxx = new RegExp ( '^(.*)\\.(t)?js$' ) ;
                            var bad_rxx = new RegExp ( '\.out\.js$' ) ;
                            var __tame_fn_33 = function (__tame_k) {
                                var __tame_fn_34 = function (__tame_k) {
                                    var __tame_for_in_array = [];
                                    for (f in files) { __tame_for_in_array.push(f); }
                                    var __tame_for_in_iter = 0;
                                    var __tame_fn_35 = function (__tame_k) {
                                        var __tame_fn_36 = function (__tame_k) {
                                            __tame_for_in_iter++
                                            tame.callChain([__tame_fn_35, __tame_k]);
                                        };
                                        if (__tame_for_in_iter < __tame_for_in_array.length) {
                                            var __tame_fn_42 = function (__tame_k) {
                                                var f = __tame_for_in_array[__tame_for_in_iter];
                                                var file = files [ f ] ;
                                                var m = file .match ( rxx ) ;
                                                var __tame_fn_37 = function (__tame_k) {
                                                    var __tame_fn_38 = function (__tame_k) {
                                                        var __tame_fn_39 = function (__tame_k) {
                                                            tests .push ( new TamedCase ( prfx , file , m [ 1 ] + ".out.js" ) ) ;
                                                            tame.callChain([__tame_k]);
                                                        };
                                                        var __tame_fn_40 = function (__tame_k) {
                                                            var __tame_fn_41 = function (__tame_k) {
                                                                tests .push ( new JsCase ( prfx + file ) ) ;
                                                                tame.callChain([__tame_k]);
                                                            };
                                                            if (!file.match ( bad_rxx )) {
                                                                tame.callChain([__tame_fn_41, __tame_k]);
                                                            } else {
                                                                tame.callChain([__tame_k]);
                                                            }
                                                        };
                                                        if (m [ 2 ]) {
                                                            tame.callChain([__tame_fn_39, __tame_k]);
                                                        } else {
                                                            tame.callChain([__tame_fn_40, __tame_k]);
                                                        }
                                                    };
                                                    if (m) {
                                                        tame.callChain([__tame_fn_38, __tame_k]);
                                                    } else {
                                                        tame.callChain([__tame_k]);
                                                    }
                                                };
                                                tame.callChain([__tame_fn_37, __tame_k]);
                                            };
                                            tame.callChain([__tame_fn_42, __tame_fn_36, __tame_k]);
                                        } else {
                                            tame.callChain([__tame_k]);
                                        }
                                        tame.__k_global.k_break = __tame_k;
                                        tame.__k_global.k_continue = function() { __tame_fn_36(__tame_k); };
                                    };
                                    tame.callChain([__tame_fn_35, __tame_k]);
                                };
                                var __tame_fn_43 = function (__tame_k) {
                                    ev ( tests ) ;
                                    tame.callChain([__tame_k]);
                                };
                                tame.callChain([__tame_fn_34, __tame_fn_43, __tame_k]);
                            };
                            tame.callChain([__tame_fn_33, __tame_k]);
                        };
                        tame.callChain([__tame_fn_31, __tame_fn_44, __tame_k]);
                    };
                    tame.callChain([__tame_fn_30, __tame_k]);
                };
                tame.callChain([__tame_fn_28, __tame_fn_45, __tame_k]);
            };
            tame.callChain([__tame_fn_27, __tame_k]);
        };
        tame.callChain([__tame_fn_46, __tame_k]);
    }
    ;
    function do_cases (ev) {
        var self = this;
        var __tame_fn_69 = function (__tame_k) {
            var res = [ ] ;
            var __tame_fn_47 = function (__tame_k) {
                var __tame_fn_48 = function (__tame_k) {
                    var __tame_ev = new tame.Event (__tame_k);
                    var __tame_fn_49 = function (__tame_k) {
                        read_cases ( __tame_ev.mkevent ( res ) ) ;
                        tame.callChain([__tame_k]);
                    };
                    __tame_fn_49(tame.end);
                    __tame_ev.trigger();
                };
                var __tame_fn_68 = function (__tame_k) {
                    var cases = res [ 0 ] ;
                    var tot = 0 ;
                    var good = 0 ;
                    var __tame_fn_50 = function (__tame_k) {
                        var __tame_fn_51 = function (__tame_k) {
                            var __tame_for_in_array = [];
                            for (var i in cases) { __tame_for_in_array.push(i); }
                            var __tame_for_in_iter = 0;
                            var __tame_fn_52 = function (__tame_k) {
                                var __tame_fn_53 = function (__tame_k) {
                                    __tame_for_in_iter++
                                    tame.callChain([__tame_fn_52, __tame_k]);
                                };
                                if (__tame_for_in_iter < __tame_for_in_array.length) {
                                    var __tame_fn_63 = function (__tame_k) {
                                        var i = __tame_for_in_array[__tame_for_in_iter];
                                        var __tame_fn_54 = function (__tame_k) {
                                            var __tame_fn_55 = function (__tame_k) {
                                                var __tame_ev = new tame.Event (__tame_k);
                                                var __tame_fn_56 = function (__tame_k) {
                                                    cases [ i ] .compile ( __tame_ev.mkevent ( ) ) ;
                                                    tame.callChain([__tame_k]);
                                                };
                                                __tame_fn_56(tame.end);
                                                __tame_ev.trigger();
                                            };
                                            var __tame_fn_62 = function (__tame_k) {
                                                var res = [ ] ;
                                                tot ++ ;
                                                var __tame_fn_57 = function (__tame_k) {
                                                    var __tame_fn_58 = function (__tame_k) {
                                                        var __tame_ev = new tame.Event (__tame_k);
                                                        var __tame_fn_59 = function (__tame_k) {
                                                            cases [ i ] .run ( __tame_ev.mkevent ( res ) ) ;
                                                            tame.callChain([__tame_k]);
                                                        };
                                                        __tame_fn_59(tame.end);
                                                        __tame_ev.trigger();
                                                    };
                                                    var __tame_fn_60 = function (__tame_k) {
                                                        var __tame_fn_61 = function (__tame_k) {
                                                            good ++ ;
                                                            tame.callChain([__tame_k]);
                                                        };
                                                        if (res [ 0 ]) {
                                                            tame.callChain([__tame_fn_61, __tame_k]);
                                                        } else {
                                                            tame.callChain([__tame_k]);
                                                        }
                                                    };
                                                    tame.callChain([__tame_fn_58, __tame_fn_60, __tame_k]);
                                                };
                                                tame.callChain([__tame_fn_57, __tame_k]);
                                            };
                                            tame.callChain([__tame_fn_55, __tame_fn_62, __tame_k]);
                                        };
                                        tame.callChain([__tame_fn_54, __tame_k]);
                                    };
                                    tame.callChain([__tame_fn_63, __tame_fn_53, __tame_k]);
                                } else {
                                    tame.callChain([__tame_k]);
                                }
                                tame.__k_global.k_break = __tame_k;
                                tame.__k_global.k_continue = function() { __tame_fn_53(__tame_k); };
                            };
                            tame.callChain([__tame_fn_52, __tame_k]);
                        };
                        var __tame_fn_64 = function (__tame_k) {
                            var __tame_fn_65 = function (__tame_k) {
                                console .log ( "All " + tot + " tests passed! YES!" ) ;
                                tame.callChain([__tame_k]);
                            };
                            var __tame_fn_66 = function (__tame_k) {
                                console .log ( "XXX only " + good + "/" + tot + " tessed pased. BOO!" ) ;
                                tame.callChain([__tame_k]);
                            };
                            if (tot == good) {
                                tame.callChain([__tame_fn_65, __tame_k]);
                            } else {
                                tame.callChain([__tame_fn_66, __tame_k]);
                            }
                        };
                        var __tame_fn_67 = function (__tame_k) {
                            ev ( ) ;
                            tame.callChain([__tame_k]);
                        };
                        tame.callChain([__tame_fn_51, __tame_fn_64, __tame_fn_67, __tame_k]);
                    };
                    tame.callChain([__tame_fn_50, __tame_k]);
                };
                tame.callChain([__tame_fn_48, __tame_fn_68, __tame_k]);
            };
            tame.callChain([__tame_fn_47, __tame_k]);
        };
        tame.callChain([__tame_fn_69, __tame_k]);
    }
    ;
    var __tame_fn_0 = function (__tame_k) {
        var __tame_ev = new tame.Event (__tame_k);
        var __tame_fn_1 = function (__tame_k) {
            do_cases ( __tame_ev.mkevent ( ) ) ;
            tame.callChain([__tame_k]);
        };
        __tame_fn_1(tame.end);
        __tame_ev.trigger();
    };
    tame.callChain([__tame_fn_0, __tame_k]);
};
__tame_fn_2 (tame.end);