var tame = require('tamejs').runtime;
var __tame_fn_4 = function (__tame_k) {
    function foo (i, cb) {
        var __tame_this = this;
        var __tame_fn_5 = function (__tame_k) {
            var __tame_fn_6 = function (__tame_k) {
                var __tame_defers = new tame.Defers (__tame_k);
                var __tame_fn_7 = function (__tame_k) {
                    setTimeout (
                    __tame_defers.defer ()
                    , i * 10 ) ;
                    tame.callChain([__tame_k]);
                };
                __tame_fn_7(tame.end);
                __tame_defers._fulfill();
            };
            var __tame_fn_8 = function (__tame_k) {
                cb ( i ) ;
                tame.callChain([__tame_k]);
            };
            tame.callChain([__tame_fn_6, __tame_fn_8, __tame_k]);
        };
        tame.callChain([__tame_fn_5, __tame_k]);
    }
    ;
    
    var results = [ ] ;
    var __tame_fn_0 = function (__tame_k) {
        var __tame_fn_1 = function (__tame_k) {
            var __tame_defers = new tame.Defers (__tame_k);
            var __tame_fn_2 = function (__tame_k) {
                 for (var i = 0 ; i < 20 ; i ++) {
                    foo ( i ,
                    __tame_defers.defer (
                        (function (__tame_slot_0, __tame_slot_1) {
                            return function () { 
                                __tame_slot_0[__tame_slot_1] = arguments[0];
                                }
                            ;
                        }) (results, i)
                    )
                    ) ;
                }
                tame.callChain([__tame_k]);
            };
            __tame_fn_2(tame.end);
            __tame_defers._fulfill();
        };
        var __tame_fn_3 = function (__tame_k) {
             for (i in results) {
                console . log ( "X: " + results [ i ] ) ;
            }
            tame.callChain([__tame_k]);
        };
        tame.callChain([__tame_fn_1, __tame_fn_3, __tame_k]);
    };
    tame.callChain([__tame_fn_0, __tame_k]);
};
__tame_fn_4 (tame.end);