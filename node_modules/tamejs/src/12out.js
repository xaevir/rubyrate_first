var tame = require('./tame').tame;
var __tame_fn_0 = function (k) {
    function blah (ev) {
        ev ( ) ;
    }
    ;
    function tostr (x) {
        var __tame_fn_1 = function (k) {
            var __tame_fn_2 = function (k) {
                var __ev = new tame.Event (k);
                var __tame_fn_3 = function (k) {
                    blah ( __ev.mkevent ( ) ) ;
                    tame.callChain([k]);
                };
                __tame_fn_3(tame.end);
                __ev.trigger();
            };
            var __tame_fn_15 = function (k) {
                var ret = "" ;
                var __tame_fn_4 = function (k) {
                    var __tame_fn_5 = function (k) {
                        var __tame_switch_x = x;
                        tame.__k_global.k_break = k;
                        var __tame_fn_7 = function (k) {
                            ret = "ZED" ;
                            var __tame_fn_6 = function (k) {
                                tame.__k_global.k_break();
                            };
                            tame.callChain([__tame_fn_6, k]);
                        };
                        var __tame_fn_9 = function (k) {
                            ret = "ONE" ;
                            var __tame_fn_8 = function (k) {
                                tame.__k_global.k_break();
                            };
                            tame.callChain([__tame_fn_8, k]);
                        };
                        var __tame_fn_10 = function (k) {
                            console .log ( "fall through!" ) ;
                            tame.callChain([k]);
                        };
                        var __tame_fn_11 = function (k) {
                            console .log ( "and again!" ) ;
                            tame.callChain([k]);
                        };
                        var __tame_fn_13 = function (k) {
                            ret = "don't know" ;
                            var __tame_fn_12 = function (k) {
                                tame.__k_global.k_break();
                            };
                            tame.callChain([__tame_fn_12, k]);
                        };
                        var __tame_switch_calls = [__tame_fn_7, tame.noop, __tame_fn_9, __tame_fn_10, tame.noop, __tame_fn_11, __tame_fn_13, k];
                        if (__tame_switch_x == 0) {
                            tame.callChain(__tame_switch_calls);
                        } else {
                            __tame_switch_calls.shift();
                            if (__tame_switch_x == 17) {
                                tame.callChain(__tame_switch_calls);
                            } else {
                                __tame_switch_calls.shift();
                                if (__tame_switch_x == 1) {
                                    tame.callChain(__tame_switch_calls);
                                } else {
                                    __tame_switch_calls.shift();
                                    if (__tame_switch_x == 2) {
                                        tame.callChain(__tame_switch_calls);
                                    } else {
                                        __tame_switch_calls.shift();
                                        if (__tame_switch_x == 18) {
                                            tame.callChain(__tame_switch_calls);
                                        } else {
                                            __tame_switch_calls.shift();
                                            if (__tame_switch_x == 3) {
                                                tame.callChain(__tame_switch_calls);
                                            } else {
                                                __tame_switch_calls.shift();
                                                tame.callChain(__tame_switch_calls);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    var __tame_fn_14 = function (k) {
                        console .log ( ret ) ;
                        tame.callChain([k]);
                    };
                    tame.callChain([__tame_fn_5, __tame_fn_14, k]);
                };
                tame.callChain([__tame_fn_4, k]);
            };
            tame.callChain([__tame_fn_2, __tame_fn_15, k]);
        };
        tame.callChain([__tame_fn_1, k]);
    }
    tostr ( 0 ) ;
    tostr ( 1 ) ;
    tostr ( 2 ) ;
    tostr ( 3 ) ;
    tostr ( 4 ) ;
    tostr ( 18 ) ;
    tostr ( 17 ) ;
    tame.callChain([k]);
};
__tame_fn_0 (tame.end);